<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >	<!-- 여기서 부터 끝까지 붙여 넣음 -->

<mapper namespace="recvNmeCardMapper">
	
	<resultMap id="nmeCardValues" type="nmeCardVo">	<!-- ValueObject의 속성과 DataBase의 column을 연계 시켜준다. -->
		<result property="cretrSeq" column="cretr_seq"/>
		<result property="memSeq" column="mem_seq"/>
		<result property="nmeCardSeq" column="nmecard_seq"/>
		<result property="nmeCardLastNme" column="nmecard_lastnme"/>
		<result property="nmeCardFirstNme" column="nmecard_firstnme"/>
		<result property="nmeCardNme" column="nmecard_nme"/>
		<result property="nmeCardSex" column="nmecard_sex"/>
		<result property="nmeCardPostNum" column="nmecard_post_num"/>
		<result property="nmeCardBascAdrs" column="nmecard_basc_adrs"/>
		<result property="nmeCardDetlAdrs" column="nmecard_detl_adrs"/>
		<result property="nmeCardAdrs" column="nmecard_adrs"/>
		<result property="nmeCardMobil" column="nmecard_mobil"/>
		<result property="nmeCardTel" column="nmecard_tel"/>
		<result property="nmeCardFax" column="nmecard_fax"/>
		<result property="nmeCardEmail" column="nmecard_email"/>
		<result property="nmeCardHompg" column="nmecard_hompg"/>
		<result property="nmeCardHob" column="nmecard_hob"/>
		<result property="nmeCardInterst" column="nmecard_interst"/>
		<result property="nmeCardJobNme" column="nmecard_job_nme"/>
		<result property="nmeCardPostnNme" column="nmecard_postn_nme"/>
		<result property="nmeCardCompnSeq" column="nmecard_compn_seq"/>
		<result property="nmeCardDepmtSeq" column="nmecard_depmt_seq"/>
		<result property="nmeCardCompnNme" column="nmecard_compn_nme"/>
		<result property="nmeCardDepmtNme" column="nmecard_depmt_nme"/>
		<result property="nmeCardSns" column="nmecard_sns"/>
		<result property="nmeCardMesngr" column="nmecard_mesngr"/>
		<result property="nmeCardLicns" column="nmecard_licns"/>
		<result property="nmeCardUseAt" column="nmecard_use_at"/>
		<result property="recvNmeCardUseAt" column="comnctn_shar_use_at"/>
		<result property="recvNmeCardBinUseAt" column="comnctn_shar_use_at_bin_type"/>
		<result property="comnctnSharSeq" column="comnctn_shar_seq"/>
		<result property="nmeCardCretDate" column="nmecard_cret_date"/>
		<result property="licnsSeq" column="licns_seq"/>
		<result property="licnsNme" column="licns_nme"/>
		<result property="licnsType" column="licns_type"/>
		<result property="licnsCretDate" column="licns_cret_date"/>
		<result property="licnsHavSeq" column="licns_hav_seq"/>
		<result property="currentPageNo" column="currentPageNo"/>
		<result property="nmeCardDateUseAt" column="nmecard_date_use_at"/>
		<result property="comnctnSharCretDate" column="comnctn_shar_cret_date"/>
		<result property="recvNmeCardDateUseAt" column="recvnmecard_date_use_at"/>
	</resultMap>
	
	<resultMap id="sapValues" type="sapVo">
		<result property="searchBgnDe" column="searchBgnDe"/>
		<result property="searchEndDe" column="searchEndDe"/>
		<result property="searchCnd" column="searchCnd"/>
		<result property="searchWrd" column="searchWrd"/>
		<result property="searchAry" column="searchAry"/>
		<result property="searchAfter" column="searchAfter"/>
		<result property="searchBefore" column="searchBefore"/>
		<result property="currentPageNo" column="currentPageNo"/>
		<result property="recordCountPerPage" column="recordCountPerPage"/>
		<result property="pageSize" column="pageSize"/>
		<result property="totalRecordCount" column="totalRecordCount"/>
		<result property="totalPageCount" column="totalPageCount"/>
		<result property="firstRecordIndex" column="firstRecordIndex"/>
		<result property="lastRecordIndex" column="lastRecordIndex"/>
		<result property="firstPageNoOnPageList" column="firstPageNoOnPageList"/>
		<result property="lastPageNoOnPageList" column="lastPageNoOnPageList"/>
	</resultMap> 
	
	<resultMap id="comnctnNmeCardValues" type="comnctnNmeCardVo">
		<result property="comnctnSeq" column="comnctn_seq"/>
		<result property="nmeCardSeq" column="nmecard_seq"/>
		<result property="memSeq" column="mem_seq"/>
		<result property="memNme" column="mem_nme"/>
		<result property="comnctnTitl" column="comnctn_titl"/>
		<result property="comnctnContn" column="comnctn_contn"/>
		<result property="comnctnType" column="comnctn_type"/>
		<result property="comnctnCretDate" column="comnctn_cret_date"/>
		<result property="comnctnPSeq" column="comnctn_pseq"/>
		<result property="comnctnUseAt" column="comnctn_use_at"/>
		<result property="comnctnAtnd" column="comnctn_atnd"/>
		<result property="comnctnNoAtnd" column="comnctn_no_atnd"/>
	</resultMap>
	
	<resultMap id="csapValues" type="comnctnSapVo">
		<result property="comnctnSearchCnd" column="comnctnSearchCnd"/>
		<result property="comnctnSearchWrd" column="comnctnSearchWrd"/>
		<result property="comnctnSearchAry" column="comnctnSearchAry"/>
		<result property="comnctnCurrentPageNo" column="comnctnCurrentPageNo"/>
		<result property="comnctnRecordCountPerPage" column="comnctnRecordCountPerPage"/>
		<result property="comnctnPageSize" column="comnctnPageSize"/>
		<result property="comnctnTotalRecordCount" column="comnctnTotalRecordCount"/>
		<result property="comnctnTotalPageCount" column="comnctnTotalPageCount"/>
		<result property="comnctnFirstRecordIndex" column="comnctnFirstRecordIndex"/>
		<result property="comnctnLastRecordIndex" column="comnctnLastRecordIndex"/>
		<result property="comnctnFirstPageNoOnPageList" column="comnctnFirstPageNoOnPageList"/>
		<result property="comnctnLastPageNoOnPageList" column="comnctnLastPageNoOnPageList"/>
	</resultMap>
	
	<!-- 받은 명함 리스트 조회 -->
	<select id="selectRecvNmeCardList" parameterType="nmeCardVo" resultMap="nmeCardValues">
		SELECT
			c.nmecard_seq
			, concat(nmecard_lastnme, nmecard_firstnme) as 'nmecard_nme'
			, IFNULL(CASE CHAR_LENGTH(nmecard_mobil)
					WHEN '11' THEN concat(LEFT(nmecard_mobil,3),'-',SUBSTRING(nmecard_mobil,4,4),'-',RIGHT(nmecard_mobil,4))
					WHEN '10' THEN concat(LEFT(nmecard_mobil,3),'-',SUBSTRING(nmecarD_mobil,4,3),'-',RIGHT(nmecarD_mobil,4))
					END, '없음') as 'nmecard_mobil'
			, IFNULL(CASE LEFT(nmecard_tel,2)
				WHEN '02' THEN
							CASE CHAR_LENGTH(nmecard_tel)
							WHEN '10' THEN concat('02','-',substring(nmecard_tel,3,4),'-',RIGHT(nmecard_tel,4))
							WHEN '11' THEN concat('02','-',substring(nmecarD_tel,3,3),'-',RIGHT(nmecard_tel,4))
							END
				ELSE 
					CASE CHAR_LENGTH(nmecard_tel)
						WHEN '10' THEN concat(LEFT(nmecard_tel,3),'-',substring(nmecard_tel,4,3),'-',RIGHT(nmecard_tel,4))
						WHEN '11' THEN concat(LEFT(nmecard_tel,3),'-',substring(nmecard_tel,4,4),'-',RIGHT(nmecard_tel,4))
						WHEN '8' THEN concat(LEFT(nmecard_tel,4),'-',substring(nmecard_tel,4,4))
						END
				END,'없음') as 'nmecard_tel'
			, IF(nmecard_email LIKE '%@', '', nmecard_email) as 'nmecard_email'
			, IFNULL((select compn_nme from compn_tb where compn_seq = c.nmecard_compn_seq),'없음') as 'nmecard_compn_nme'
			, nmecard_use_at
			, nmecard_cret_date
            , a.comnctn_shar_seq
            , a.mem_seq
            , a.comnctn_seq
			, comnctn_shar_cret_date
            , comnctn_shar_use_at
            , comnctn_shar_use_at_bin_type
            , IF(date(comnctn_shar_cret_date)>date_add(now(), interval-1 day), 'Y', 'N') as 'recvnmecard_date_use_at'
		FROM
		comnctn_shar_tb a
		JOIN comnctn_tb b ON a.comnctn_seq = b.comnctn_seq
		JOIN nmecard_tb c ON b.nmecard_seq = c.nmecard_seq
		JOIN mem_tb d ON a.mem_seq = d.mem_seq
		WHERE
			comnctn_shar_use_at = #{recvNmeCardUseAt}
			AND comnctn_shar_use_at_bin_type = #{recvNmeCardBinUseAt}
			AND a.mem_seq = #{memSeq}
		<if test="searchCnd == 0">
	  		AND CONCAT(nmecard_lastnme,nmecard_firstnme) LIKE CONCAT ('%', #{searchWrd},'%')
		</if>
		<if test="searchCnd == 1">
		   AND nmeCard_mobil LIKE CONCAT ('%', #{searchWrd},'%') 
		</if>	
		<if test="searchCnd == 2">
		   AND nmeCard_email LIKE CONCAT ('%', #{searchWrd},'%')
		</if>
		AND comnctn_shar_cret_date > #{searchBgnDe}
		<if test="searchEndDe != ''">
			AND #{searchEndDe} > comnctn_shar_cret_date
		</if>
		AND d.mem_seq = ${cretrSeq}
		GROUP BY c.nmecard_seq
		ORDER BY
		<if test="searchAry != 1">
			comnctn_shar_cret_date DESC
		</if>
		<if test="searchAry == 1">
			nmeCard_nme ASC
		</if>
		LIMIT #{recordCountPerPage} OFFSET #{firstRecordIndex};
	</select>
	
	
	<!-- 받은 명함 레코드 -->
	<select id="selectRecvNmeCardCount" parameterType="nmeCardVo" resultType="int">
		SELECT
			COUNT(DISTINCT b.nmecard_seq) AS selectRecvNmeCardCount
		FROM
		comnctn_shar_tb a
		JOIN comnctn_tb b on a.comnctn_seq = b.comnctn_seq
		JOIN nmecard_tb c on b.nmecard_seq = c.nmecard_seq
		JOIN mem_tb d ON a.mem_seq = d.mem_seq
		WHERE
			comnctn_shar_use_at= #{recvNmeCardUseAt}
			AND comnctn_shar_use_at_bin_type = #{recvNmeCardBinUseAt}
		<if test="searchCnd == 0">
			AND CONCAT(nmecard_lastnme,nmecard_firstnme) LIKE CONCAT ('%', #{searchWrd},'%')
		</if>
		<if test="searchCnd == 1">
		   AND nmeCard_mobil LIKE CONCAT ('%', #{searchWrd},'%')
		</if>	
		<if test="searchCnd == 2">
		   AND nmeCard_email LIKE CONCAT ('%', #{searchWrd},'%')
		</if>
		AND comnctn_shar_cret_date > #{searchBgnDe}
		<if test="searchEndDe != ''">
			AND #{searchEndDe} > comnctn_shar_cret_date
		</if>
			AND d.mem_seq = #{cretrSeq}
		;
	</select>
	
	<!-- 받은 명함 상세보기 -->
	<select id="selectRecvNmeCardView"  parameterType="nmeCardVo" resultMap="nmeCardValues">
		SELECT
			cretr_seq
			, c.nmecard_seq
			, comnctn_shar_seq
			, nmecard_lastnme
			, nmecard_firstnme
			, concat(nmecard_lastnme, nmecard_firstnme) as "nmecard_nme"
			, nmecard_sex
			, nmecard_post_num
			, nmecard_basc_adrs
			, nmecard_detl_adrs
			, IFNULL(CASE CHAR_LENGTH(nmecard_mobil)
					WHEN '11' THEN concat(LEFT(nmecard_mobil,3),'-',SUBSTRING(nmecard_mobil,4,4),'-',RIGHT(nmecard_mobil,4))
					WHEN '10' THEN concat(LEFT(nmecard_mobil,3),'-',SUBSTRING(nmecarD_mobil,4,3),'-',RIGHT(nmecarD_mobil,4))
					END, '없음') as 'nmecard_mobil'
			, IFNULL(CASE LEFT(nmecard_tel,2)
				WHEN '02' THEN
							CASE CHAR_LENGTH(nmecard_tel)
							WHEN '10' THEN concat('02','-',substring(nmecard_tel,3,4),'-',RIGHT(nmecard_tel,4))
							WHEN '9' THEN concat('02','-',substring(nmecarD_tel,3,3),'-',RIGHT(nmecard_tel,4))
							END
				ELSE 
					CASE CHAR_LENGTH(nmecard_tel)
						WHEN '10' THEN concat(LEFT(nmecard_tel,3),'-',substring(nmecard_tel,4,3),'-',RIGHT(nmecard_tel,4))
						WHEN '11' THEN concat(LEFT(nmecard_tel,3),'-',substring(nmecard_tel,4,4),'-',RIGHT(nmecard_tel,4))
						WHEN '8' THEN concat(LEFT(nmecard_tel,4),'-',substring(nmecard_tel,4,4))
						END
				END,'없음') as 'nmecard_tel'
			, IFNULL(CASE LEFT(nmecard_fax,2)
				WHEN '02' THEN
							CASE CHAR_LENGTH(nmecard_fax)
							WHEN '10' THEN concat('02','-',substring(nmecard_fax,3,4),'-',RIGHT(nmecard_fax,4))
							WHEN '9' THEN concat('02','-',substring(nmecard_fax,3,3),'-',RIGHT(nmecard_fax,4))
							END
				ELSE 
					CASE CHAR_LENGTH(nmecard_fax)
						WHEN '10' THEN concat(LEFT(nmecard_fax,3),'-',substring(nmecard_fax,4,3),'-',RIGHT(nmecard_fax,4))
						WHEN '11' THEN concat(LEFT(nmecard_fax,3),'-',substring(nmecard_fax,4,4),'-',RIGHT(nmecard_fax,4))
						WHEN '8' THEN concat(LEFT(nmecard_fax,4),'-',substring(nmecard_fax,4,4))
						END
				END,'없음') as 'nmecard_fax'
			, IF(nmecard_email LIKE '%@', ' ', nmecard_email) as 'nmecard_email'
			, nmecard_hompg
			, nmecard_hob
			, nmecard_interst
			, nmecard_job_nme
			, nmecard_postn_nme
			, c.nmecard_compn_seq
			, c.nmecard_depmt_seq
			, IFNULL((select compn_nme from bcms.compn_tb where compn_seq = c.nmecard_compn_seq),'없음') as 'nmecard_compn_nme'
			, IFNULL((select depmt_nme from bcms.depmt_tb where depmt_seq = c.nmecard_depmt_seq),'없음') as 'nmecard_depmt_nme'
			, IF(nmecard_sns LIKE '%()%', ' ', nmecard_sns) as 'nmecard_sns'
			, IF(nmecard_mesngr LIKE '%()%', ' ', nmecard_mesngr) as 'nmecard_mesngr'
			, nmecard_use_at
			, a.comnctn_shar_seq
			, comnctn_shar_use_at
			, comnctn_shar_use_at_bin_type
			, comnctn_shar_cret_date
			, GROUP_CONCAT(d.licns_seq) AS 'licns_seq'
		FROM
		comnctn_shar_tb a
		JOIN comnctn_tb b ON a.comnctn_seq = b.comnctn_seq
		JOIN nmecard_tb c ON b.nmecard_seq = c.nmecard_seq
 		LEFT JOIN bcms.licns_hav_tb d ON c.nmecard_seq = d.nmecard_seq
    	LEFT JOIN bcms.compn_tb e ON c.nmecard_compn_seq = e.compn_seq
     	LEFT JOIN bcms.depmt_tb f ON c.nmecard_depmt_seq = f.depmt_seq
		WHERE
			c.nmecard_seq = #{nmeCardSeq}
		AND
            a.comnctn_shar_use_at_bin_type = #{recvNmeCardBinUseAt};
			
	</select>
	
	<!--받은 명함 삭제 -->
	<update id="deleteRecvNmeCard" parameterType="nmeCardVo">
		UPDATE
		comnctn_shar_tb a
		JOIN comnctn_tb b on a.comnctn_seq = b.comnctn_seq
		JOIN nmecard_tb c on b.nmecard_seq = c.nmecard_seq
		SET
			  comnctn_shar_use_at_bin_type = 'B'
			, comnctn_shar_cret_date = SYSDATE()
		WHERE
			
			a.mem_seq = ${memSeq}
		AND
			c.nmecard_seq in (#{nmeCardSeq});
	</update>
	
	
	<!--받은 명함 완전 삭제 -->
	<update id="deleteRecvNmeCardBin" parameterType="int">
		UPDATE
		comnctn_shar_tb a
		JOIN comnctn_tb b on a.comnctn_seq = b.comnctn_seq
		JOIN nmecard_tb c on b.nmecard_seq = c.nmecard_seq
		SET
			  comnctn_shar_use_at_bin_type = 'D'
			, comnctn_shar_cret_date = SYSDATE()
		WHERE
			c.nmecard_seq in (#{nmeCardSeq})
		AND a.mem_seq = ${memSeq}
		AND a.comnctn_shar_use_at_bin_type = 'B';
	</update>
	
	<!--받은 명함 복원 -->
	<update id="recvyRecvNmeCardBin" parameterType="int">
		UPDATE
		comnctn_shar_tb a
		JOIN comnctn_tb b on a.comnctn_seq = b.comnctn_seq
		JOIN nmecard_tb c on b.nmecard_seq = c.nmecard_seq
		SET
			  comnctn_shar_use_at_bin_type = 'N'
			, comnctn_shar_cret_date = SYSDATE()
		WHERE
			c.nmecard_seq in (#{nmeCardSeq})
		AND a.mem_seq = ${memSeq};
	</update>
	
	<!--받은 명함 커뮤니케이션 카운트  -->
	<select id="selectRecvNmeCardComnctnCount" parameterType="comnctnNmeCardVo" resultType="int">
		SELECT
			COUNT(cmt.comnctn_seq) AS selectNmeCardCount
		FROM
		comnctn_tb AS cmt
		RIGHT JOIN comnctn_shar_tb AS cst ON cmt.comnctn_seq = cst.comnctn_seq
		WHERE
			comnctn_use_at = 'Y'
		AND cst.mem_seq = #{memSeq}
		AND cmt.nmecard_seq = #{nmeCardSeq}
		<if test ="comnctnSearchAry == 0">
			AND cmt.comnctn_type IN ("meeting", "memo")
		</if>
		<if test ="comnctnSearchAry == 1">
			AND cmt.comnctn_type IN ("meeting")
		</if>
		<if test ="comnctnSearchAry == 2">
			AND cmt.comnctn_type IN ("memo")
		</if>
		<if test ="comnctnSearchCnd == 0">
			AND cmt.comnctn_titl LIKE CONCAT ('%', #{comnctnSearchWrd},'%')
		</if>
		<if test ="comnctnSearchCnd == 1">
			AND mem.mem_nme LIKE CONCAT ('%', #{comnctnSearchWrd},'%')
		</if>
		;
	</select>


	<!--받은 명함 커뮤니케이션 리스트  -->
	<select id="selectRecvNmeCardComnctnList" parameterType="comnctnNmeCardVo" resultMap="comnctnNmeCardValues">
		SELECT
			  cmt.comnctn_seq
			, cmt.nmecard_seq
			, cmt.mem_seq
			, cmt.comnctn_titl
			, cmt.comnctn_type
			, cmt.comnctn_cret_date 
			, mem.mem_nme
		FROM
		comnctn_tb AS cmt
		LEFT JOIN mem_tb AS mem ON cmt.mem_seq = mem.mem_seq
		RIGHT JOIN comnctn_shar_tb AS cst ON cmt.comnctn_seq = cst.comnctn_seq
		WHERE
			cmt.comnctn_use_at = 'Y'
		AND cst.comnctn_shar_use_at_bin_type ='N'
		AND cmt.nmecard_seq = #{nmeCardSeq}
		AND cst.mem_seq = #{memSeq}
		<if test ="comnctnSearchAry == 0">
			AND cmt.comnctn_type IN ("meeting", "memo")
		</if>
		<if test ="comnctnSearchAry == 1">
			AND cmt.comnctn_type IN ("meeting")
		</if>
		<if test ="comnctnSearchAry == 2">
			AND cmt.comnctn_type IN ("memo")
		</if>
		<if test ="comnctnSearchCnd == 0">
			AND cmt.comnctn_titl LIKE CONCAT ('%', #{comnctnSearchWrd},'%')
		</if>
		<if test ="comnctnSearchCnd == 1">
			AND mem.mem_nme LIKE CONCAT ('%', #{comnctnSearchWrd},'%')
		</if>
		LIMIT #{comnctnRecordCountPerPage} OFFSET #{comnctnFirstRecordIndex};
	</select>
	
	<!--받은 명함 커뮤니케이션 상세보기  -->
	<select id="selectAtndList" parameterType="comnctnNmeCardVo" resultMap="comnctnNmeCardValues">
		SELECT a.comnctn_seq
			, b.mem_seq
		    , c.mem_nme
		FROM comnctn_tb a
		JOIN atnd_hav_tb b ON a.comnctn_seq = b.comnctn_seq
		JOIN mem_tb c ON b.mem_seq = c.mem_seq
		WHERE a.comnctn_seq = #{comnctnSeq};
	</select>
	
	<!--받은 명함 커뮤니케이션 상세보기  -->
	<select id="selectRecvNmeCardComnctnView" parameterType="comnctnNmeCardVo" resultMap="comnctnNmeCardValues">
		SELECT
			  a.comnctn_seq
			, a.nmecard_seq
			, a.mem_seq
			, a.comnctn_titl
			, a.comnctn_contn
			, a.comnctn_type
			, a.comnctn_cret_date
			, IFNULL(group_concat(b.mem_seq),'') as comnctn_atnd
			, a.comnctn_no_atnd
		FROM comnctn_tb as a
		JOIN atnd_hav_tb b ON a.comnctn_Seq = b.comnctn_seq
		WHERE comnctn_use_at = 'Y'
		AND a.comnctn_seq = #{comnctnSeq}
		AND a.nmecard_seq = #{nmeCardSeq};
	</select>
	
</mapper>